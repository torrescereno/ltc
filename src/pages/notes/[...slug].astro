---
import AnimatedBar from "@/components/AnimatedBar.tsx";
import Article from "@/components/Article.astro";
import Header from "@/components/Header.astro";
import GoBack from "@/components/GoBack.astro";
import Layout from "@/layouts/Layout.astro";
import TableOfContents from "@/components/TableOfContents.astro";

import type { GetStaticPaths } from "astro";
import type { MarkdownHeading } from "astro";

import { type CollectionEntry, getCollection } from "astro:content";

export const prerender = true;

export const getStaticPaths = (async () => {
  const posts = await getCollection("note");

  const headings = await Promise.all(
    posts.map(async (post) => {
      const data = await post.render();
      return data.headings;
    }),
  );

  return posts.map((post, index) => ({
    params: { slug: post.slug },
    props: { post, headings: headings[index] },
  }));
}) satisfies GetStaticPaths;

type Props = {
  post: CollectionEntry<"note">;
  headings: MarkdownHeading[];
};

const { post, headings } = Astro.props;
---

<Layout title={post.data.title}>
  <main class="min-h-screen">
    <AnimatedBar client:visible />
    <div class="text-gray-300 max-w-2xl m-auto">
      <Header />
      <GoBack />
      <TableOfContents headings={headings} />
      <Article post={post} />
    </div>
  </main>
</Layout>
